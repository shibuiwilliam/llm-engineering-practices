@startuml Async Batch Processing Pattern

' Component Diagram
package "Async Batch Processing System" {
    [Client] as client
    [Job Queue] as queue
    [Worker Pool] as workers
    [Result Store] as store
    [LLM Service] as llm
    [Monitoring System] as monitoring
}

client --> queue : Submit jobs
queue --> workers : Dequeue tasks
workers --> llm : Process with LLM
workers --> store : Store results
monitoring --> queue : Monitor queue length
monitoring --> workers : Monitor processing status
monitoring --> store : Monitor results

' Sequence Diagram
@enduml

@startuml Async Batch Processing Sequence

actor Client
participant "Job Queue" as Queue
participant "Worker Pool" as Workers
participant "LLM Service" as LLM
participant "Result Store" as Store
participant "Monitoring" as Monitor

Client -> Queue: Submit batch jobs
activate Queue

loop For each job
    Queue -> Workers: Dequeue job
    activate Workers
    
    Workers -> LLM: Process with LLM
    activate LLM
    LLM --> Workers: Return result
    deactivate LLM
    
    Workers -> Store: Store result
    activate Store
    Store --> Workers: Confirm storage
    deactivate Store
    
    Workers --> Queue: Job complete
    deactivate Workers
end

Queue --> Client: All jobs processed
deactivate Queue

Monitor -> Queue: Monitor queue length
Monitor -> Workers: Monitor processing status
Monitor -> Store: Monitor results

@enduml 