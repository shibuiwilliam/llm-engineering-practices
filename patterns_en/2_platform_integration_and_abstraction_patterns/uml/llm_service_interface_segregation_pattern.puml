@startuml

' Style configurations
skinparam classAttributeIconSize 0
skinparam interfaceStyle italic
skinparam classStyle {
    BackgroundColor White
    ArrowColor Black
    BorderColor Black
}

' Interfaces
interface ITextGenerationService {
    +generate(prompt: String, options: GenerationOptions): String
}

interface IEmbeddingService {
    +embed(text: String): Vector
}

interface IChatConversationService {
    +sendMessage(sessionId: String, message: String): ChatResponse
    +getHistory(sessionId: String): List<Message>
}

interface IFunctionCallService {
    +callFunction(functionName: String, parameters: Map<String, Any>): Any
}

' MCP Interfaces
interface IMCPClient {
    +sendRequest(request: MCPRequest): MCPResponse
    +registerTool(tool: MCPTool): void
}

interface IMCPServer {
    +handleRequest(request: MCPRequest): MCPResponse
    +registerTool(tool: MCPTool): void
}

' Concrete implementations
class TextGenerationServiceImpl {
    -model: String
    +generate(prompt: String, options: GenerationOptions): String
}

class EmbeddingServiceImpl {
    -model: String
    +embed(text: String): Vector
}

class ChatConversationServiceImpl {
    -sessionStore: SessionStore
    +sendMessage(sessionId: String, message: String): ChatResponse
    +getHistory(sessionId: String): List<Message>
}

class FunctionCallServiceImpl {
    -functionRegistry: FunctionRegistry
    +callFunction(functionName: String, parameters: Map<String, Any>): Any
}

' MCP Implementations
class MCPClientImpl {
    -endpoint: String
    -tools: List<MCPTool>
    +sendRequest(request: MCPRequest): MCPResponse
    +registerTool(tool: MCPTool): void
}

class MCPServerImpl {
    -tools: List<MCPTool>
    +handleRequest(request: MCPRequest): MCPResponse
    +registerTool(tool: MCPTool): void
}

' Combined service for clients that need multiple features
class CombinedLLMService {
    -textGenService: ITextGenerationService
    -embeddingService: IEmbeddingService
    -chatService: IChatConversationService
    -functionService: IFunctionCallService
    -mcpClient: IMCPClient
}

' Relationships
ITextGenerationService <|.. TextGenerationServiceImpl
IEmbeddingService <|.. EmbeddingServiceImpl
IChatConversationService <|.. ChatConversationServiceImpl
IFunctionCallService <|.. FunctionCallServiceImpl
IMCPClient <|.. MCPClientImpl
IMCPServer <|.. MCPServerImpl

CombinedLLMService o-- ITextGenerationService
CombinedLLMService o-- IEmbeddingService
CombinedLLMService o-- IChatConversationService
CombinedLLMService o-- IFunctionCallService
CombinedLLMService o-- IMCPClient

note right of ITextGenerationService
  Focused on text generation
  with prompt and options
end note

note right of IEmbeddingService
  Converts text to vector
  representations
end note

note right of IChatConversationService
  Manages conversation context
  and message history
end note

note right of IFunctionCallService
  Handles external function
  calls and tool usage
end note

note right of IMCPClient
  Client-side implementation
  of Model Context Protocol
end note

note right of IMCPServer
  Server-side implementation
  of Model Context Protocol
end note

@enduml 