@startuml
skinparam classAttributeIconSize 0

interface ModelClient {
  +generate(text: String, params: Map): String
  +embed(text: String): Vector
}

interface ModelClientFactory {
  +createClient(config: Config): ModelClient
}

class OpenAIModelClient {
  -apiKey: String
  -endpoint: String
  +generate(text: String, params: Map): String
  +embed(text: String): Vector
}

class AnthropicModelClient {
  -apiKey: String
  -endpoint: String
  +generate(text: String, params: Map): String
  +embed(text: String): Vector
}

class OpenAIModelClientFactory {
  +createClient(config: Config): ModelClient
}

class AnthropicModelClientFactory {
  +createClient(config: Config): ModelClient
}

class Config {
  +apiKey: String
  +endpoint: String
  +model: String
  +timeout: Integer
}

ModelClient <|.. OpenAIModelClient
ModelClient <|.. AnthropicModelClient
ModelClientFactory <|.. OpenAIModelClientFactory
ModelClientFactory <|.. AnthropicModelClientFactory
OpenAIModelClientFactory ..> OpenAIModelClient
AnthropicModelClientFactory ..> AnthropicModelClient
OpenAIModelClient ..> Config
AnthropicModelClient ..> Config

note right of ModelClient
  Common interface for all LLM clients
end note

note right of ModelClientFactory
  Factory interface for creating model clients
end note

@enduml 